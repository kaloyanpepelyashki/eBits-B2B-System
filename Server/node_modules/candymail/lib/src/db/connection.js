"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDB = exports.genConnection = void 0;
const typeorm_1 = require("typeorm");
const User_1 = require("../entity/User");
const Message_1 = require("../entity/Message");
const config_1 = require("../config");
const genConnection = () => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    yield typeorm_1.createConnection({
        type: 'sqlite',
        database: './candymail.sql',
        dropSchema: ((_b = (_a = config_1.getConfig()) === null || _a === void 0 ? void 0 : _a.db) === null || _b === void 0 ? void 0 : _b.reset) != null ? config_1.getConfig().db.reset : true,
        entities: [User_1.User, Message_1.Message],
        synchronize: true,
    });
});
exports.genConnection = genConnection;
const getDB = () => __awaiter(void 0, void 0, void 0, function* () {
    return yield typeorm_1.getConnection();
});
exports.getDB = getDB;
