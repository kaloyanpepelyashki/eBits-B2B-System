"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.clearAllScheduledMessages = exports.getAllScheduledMessages = exports.getScheduledMessagesBeforeTime = exports.addScheduledMessage = void 0;
const db_1 = require("./db");
const addScheduledMessage = (messageOptions) => __awaiter(void 0, void 0, void 0, function* () {
    yield db_1.addEmailRow(messageOptions);
});
exports.addScheduledMessage = addScheduledMessage;
const getScheduledMessagesBeforeTime = (time) => __awaiter(void 0, void 0, void 0, function* () {
    const emails = yield db_1.getEmailRowsToBeSent(time);
    const messages = emails.map((email) => ({ id: email.id, email }));
    return messages;
});
exports.getScheduledMessagesBeforeTime = getScheduledMessagesBeforeTime;
const getAllScheduledMessages = () => __awaiter(void 0, void 0, void 0, function* () {
    const emails = yield db_1.getAllEmailRows();
    const messages = emails.map((email) => ({ id: email.id, email }));
    return messages;
});
exports.getAllScheduledMessages = getAllScheduledMessages;
const clearAllScheduledMessages = () => {
    db_1.clearAllRows();
};
exports.clearAllScheduledMessages = clearAllScheduledMessages;
